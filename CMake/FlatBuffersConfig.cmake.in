@PACKAGE_INIT@
#-----------------------------------------------------------------------------
# Include target definitions :
# Skip them if flatc is already defined - this can be because it was compiled
# as part of the same project using add_subdirectory
#-----------------------------------------------------------------------------
if(NOT TARGET flatc)
  include ("${CMAKE_CURRENT_LIST_DIR}/FlatBuffersTargets.cmake")
endif ()

#-----------------------------------------------------------------------------
# Include directories
#-----------------------------------------------------------------------------
set(FlatBuffers_INCLUDE_DIRS @PACKAGE_FLATBUFFERS_INCLUDE_DIRS@)
set(FlatBuffers_FOUND 1)
set(FLATBUFFERS_FOUND 1) # Added for compatibility

# these are for compatibility with older cmake scripts
set(FlatBuffers_INCLUDE_DIR  @PACKAGE_FLATBUFFERS_INCLUDE_DIRS@)
set(FLATBUFFERS_INCLUDE_DIRS @PACKAGE_FLATBUFFERS_INCLUDE_DIRS@)
set(FLATBUFFERS_INCLUDE_DIR  @PACKAGE_FLATBUFFERS_INCLUDE_DIRS@)
set(FLATBUFFERS_FLATC_EXECUTABLE flatc)
set(FLATBUFFERS_LIBRARY flatbuffers)

include_directories(${PROJECT_BINARY_DIR})

#-----------------------------------------------------------------------------
# function needed by dependent projects
#-----------------------------------------------------------------------------
function(flatbuffers_generate_c_headers Name)
  set(FLATC_OUTPUTS)
  set(FLATC_ZEROEQ_OUTPUTS)
  foreach(FILE ${ARGN})
    get_filename_component(FLATC_OUTPUT ${FILE} NAME_WE)
    set(FLATC_ZEROEQ_OUTPUT
      "${CMAKE_CURRENT_BINARY_DIR}/${FLATC_OUTPUT}_zeroeq_generated.h")
    set(FLATC_OUTPUT
      "${CMAKE_CURRENT_BINARY_DIR}/${FLATC_OUTPUT}_generated.h")
    list(APPEND FLATC_OUTPUTS ${FLATC_OUTPUT})
    list(APPEND FLATC_ZEROEQ_OUTPUTS ${FLATC_ZEROEQ_OUTPUT})

    add_custom_command(OUTPUT ${FLATC_OUTPUT} ${FLATC_ZEROEQ_OUTPUT}
      COMMAND ${FLATBUFFERS_FLATC_EXECUTABLE}
      ARGS -c -z -o "${CMAKE_CURRENT_BINARY_DIR}/" ${FILE}
      COMMENT "Building C++ headers for ${FILE}"
      DEPENDS ${FILE} ${FLATBUFFERS_FLATC_EXECUTABLE}
      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
  endforeach()
  set(${Name}_OUTPUTS ${FLATC_OUTPUTS} PARENT_SCOPE)
  set(${Name}_ZEROEQ_OUTPUTS ${FLATC_ZEROEQ_OUTPUTS} PARENT_SCOPE)
endfunction()
